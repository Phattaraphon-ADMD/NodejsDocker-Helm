# Default values for my-app-chart.
# This is a YAML-formatted file.
# Declare variables to be substituted into your templates.

replicaCount: 2

image:
  # เปลี่ยนให้เป็น Docker Hub repository ของคุณ
  repository: "phattaraphon1/nodejs-test-cicd"
  pullPolicy: Always
  # เปลี่ยนให้เป็น tag ที่คุณต้องการ
  tag: "f4371f6"

# สำหรับ private Docker Hub registry
imagePullSecrets:
  - name: dockerhub-secret

nameOverride: ""
fullnameOverride: ""

service:
  # ใช้ Ingress แล้วแนะนำให้เป็น ClusterIP (ไม่ต้องระบุ port ตอนเข้าเว็บ)
  type: ClusterIP
  port: 80
  targetPort: 3000
  # nodePort: 30080 # เปิดใช้เมื่อ type: NodePort เท่านั้น (เช่น ต้องการ debug bypass ingress)

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  hosts:
    - host: my-app.local
      paths:
        - path: /
          pathType: Prefix
  # เพิ่มตัวอย่าง TLS (คอมเมนต์ไว้ก่อน ถ้าต้องการเปิดใช้งาน ให้สร้าง secret tls ชื่อ my-app-tls)
  # tls:
  #   - secretName: my-app-tls
  #     hosts:
  #       - my-app.local

  # extraPaths: ใช้สำหรับเพิ่ม path อื่นที่ชี้ไป service อื่นก่อน paths หลักของแอปนี้
  # ตัวอย่าง:
  # extraPaths:
  #   - path: /metrics
  #     pathType: Prefix
  #     backend:
  #       service:
  #         name: metrics-service
  #         port:
  #           number: 9100
  extraPaths: []

resources:
  # ตัวอย่าง resource limits และ requests
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Environment variables สำหรับแอปพลิเคชัน
env:
  - name: NODE_ENV
    value: "production"
  - name: PORT
    value: "3000"

# Docker Hub credentials - ใช้แค่สำหรับสร้าง Secret อัตโนมัติ (ไม่แนะนำใน production)
# สำหรับ production ให้สร้าง secret แยกด้วย kubectl หรือ external secret management
dockerhub:
  # เปิดใช้การสร้าง secret อัตโนมัติ (false = ใช้ secret ที่มีอยู่แล้ว)
  createSecret: false
  # ข้อมูลเหล่านี้จะใช้เฉพาะเมื่อ createSecret: true
  username: "your-dockerhub-username"
  password: "your-dockerhub-password"
  email: "your-email@example.com"